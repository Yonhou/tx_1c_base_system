C51 COMPILER V7.06   DIGIT_SEG                                                             05/30/2020 21:05:36 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE DIGIT_SEG
OBJECT MODULE PLACED IN digit_seg.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\digit_seg.c BROWSE DEBUG OBJECTEXTEND PRINT(.\digit_seg.lst) OBJECT(dig
                    -it_seg.obj)

stmt level    source

   1          #include <reg51.h>
   2          sbit dula=P2^6;//U1Ëø´æÆ÷Ëø´æ¶Ë
   3          sbit wela=P2^7;//U2Ëø´æÆ÷Ëø´æ¶Ë
   4          unsigned char code table[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x7
             -1};
   5          unsigned char code ucWeTable[]={0xFE,0xFD,0xFB,0xF7,0xEF,0xDF};//,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,
             -0x79,0x71};
   6          typedef struct{
   7              unsigned char ucWe;
   8                  unsigned char ucValue;
   9          }stDigitSegSts;
  10          stDigitSegSts ucDigitSegStsVal[]={{0xFF,0x00},{0xFF,0x00},{0xFF,0x00},{0xFF,0x00},{0xFF,0x00},{0xFF,0x00}}
             -;//Ä¬ÈÏ¹Ø±ÕËùÓÐÊýÂë¹Ü
  11          
  12          void digital_segment_init(void)
  13          {
  14   1              wela=1;
  15   1              //P0=aa;
  16   1              P0=0xC0;
  17   1              wela=0;
  18   1      
  19   1              //dula=1;
  20   1              //P0=0x7F;
  21   1              //dula=0;
  22   1      }
  23          void digital_seg_cyclic(void)
  24          {
  25   1          static unsigned char index=0;
  26   1          //ÊýÂë¹Ü
  27   1              P0=0x00;
  28   1              dula=1;
  29   1              P0=ucDigitSegStsVal[index].ucValue;
  30   1              dula=0;
  31   1              P0=0xFF;
  32   1          wela=1;
  33   1              P0=ucDigitSegStsVal[index].ucWe;
  34   1              wela=0;
  35   1      
  36   1              index++;
  37   1              if(index==(sizeof(ucDigitSegStsVal)/sizeof(stDigitSegSts)))
  38   1              {
  39   2                  index=0;
  40   2              }
  41   1      }
  42          void digital_seg_switch(unsigned char ucChannel,unsigned char unValue)
  43          {
  44   1          if((unValue<=sizeof(table))&&(ucChannel<(sizeof(ucDigitSegStsVal)/sizeof(stDigitSegSts))))
  45   1              {
  46   2                  ucDigitSegStsVal[ucChannel].ucValue = table[unValue];
  47   2                      ucDigitSegStsVal[ucChannel].ucWe=ucWeTable[ucChannel];
  48   2              }
  49   1      }


C51 COMPILER V7.06   DIGIT_SEG                                                             05/30/2020 21:05:36 PAGE 2   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     94    ----
   CONSTANT SIZE    =     22    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
